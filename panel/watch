#!/usr/bin/env python3

import i3ipc
from subprocess import Popen


class watch_panel:

    def connect(self):
        # Create the Connection object that can be used to send commands
        # and subscribe to events.
        self.conn = i3ipc.Connection()

    def on_event(self, ipc, e):
        if e.container.focused and e.container.fullscreen_mode:
            self.stopPanel()
            # print("Focused Fullscreen")
        elif e.container.focused and not e.container.fullscreen_mode:
            self.startPanel()
            # print("Focused non fullscreen")

    def subscribe(self, event):
        # Subscribe to the workspace event
        self.conn.on(event, self.on_event)

    def __init__(self):
        self.connect()
        self.running = False
        self.subscribe('window::focus')
        self.subscribe('window::fullscreen_mode')
        # Start the main loop and wait for events to come in.
        self.conn.main()

    def startPanel(self):
        if not self.running:
            Popen(["toggle_panel", "start", "> /dev/null 2>&1"])
            self.running = True

    def stopPanel(self):
        if self.running:
            Popen(["toggle_panel", "stop", "> /dev/null 2>&1"])
            self.running = False


if __name__ == '__main__':
    try:
        watch_panel()
    except Exception as e:
        print("exeption flew")
