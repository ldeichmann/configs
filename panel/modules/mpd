#!/bin/bash

. ./config

SCRIPT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )""/""$(basename $0)"

HOSTS=("gimli")

if [ -z "$1" ] ; then
    HOST=""
    HOST_CMD=""
else
    HOST="$1"
    HOST_CMD="-h $HOST"
fi

switchHost() {
    if [ -z $HOST ] ; then
        HOST="${HOSTS[0]}";
    elif [[ "${HOSTS[-1]}" = "$HOST" ]]; then
        HOST="";
    else
        for i in "${!HOSTS[@]}"; do
            if [[ "${HOSTS[$i]}" = "${HOST}" ]]; then
                HOST=${HOSTS[$(($i + 1))]};
                # echo "${i}";
                break;
            fi
        done
    fi
    # echo "got SIGUSR1, restarting with $HOST";
    exec $SCRIPT $HOST
}

trap switchHost USR1

# echo "Starting with host $HOST"

STATUS_PLAYING=""
STATUS_PAUSED=""
STATUS_STOPPED=""

PLAY="%{A1:mpc $HOST_CMD play:}"
PAUSE="%{A1:mpc $HOST_CMD pause:}"
PREV="%{A2:mpc $HOST_CMD prev:}"
NEXT="%{A3:mpc $HOST_CMD next:}"



printTrack() {

    song=$(mpc $HOST_CMD current)
    status=$(mpc $HOST_CMD status)

    case $status in
        *"[playing]"*)
            FULL="$PAUSE""$PREV""$NEXT""$STATUS_PLAYING ""$song""%{A}%{A}%{A}"
        ;;
        *"[paused]"*)
            FULL="$PLAY""$PREV""$NEXT""$STATUS_PAUSED ""$song""%{A}%{A}%{A}"
        ;;
        *)
            FULL="$STATUS_STOPPED ""Not playing"
        ;;
    esac

    printf "%s\n" "$FULL"

}

printTrack

while true; do
    mpc -q $HOST_CMD status
    while [ $? -eq 0 ]; do
        timeout 1 mpc $HOST_CMD idle | \
        while read -r _ ; do
            printTrack
        done
    done
    printf "%s\n" "Error"
    sleep 1
done
