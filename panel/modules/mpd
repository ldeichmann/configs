#!/bin/bash

. ./config

# This is shit...
SCRIPT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )""/""$(basename $0)"

HOSTS=("localhost" "gimli")

STATUS_PLAYING=""
STATUS_PAUSED=""
STATUS_STOPPED=""
STATUS_ERROR=""


# Use first host if none given
if [ -z "$1" ] ; then
    HOST="${HOSTS[0]}"
else
    HOST="$1"
fi
HOST_CMD="-h $HOST"

switchHost() {
    if [[ "${HOSTS[-1]}" = "$HOST" ]]; then
        HOST="${HOSTS[0]}";
    else
        for i in "${!HOSTS[@]}"; do
            if [[ "${HOSTS[$i]}" = "${HOST}" ]]; then
                HOST=${HOSTS[$(($i + 1))]};
                # echo "${i}";
                break;
            fi
        done
    fi
    notify-send "Switching MPD" "Now connecting to $HOST"
    exec $SCRIPT $HOST
}

# execute switchHost when receiving SIGUSR1
trap switchHost USR1


PLAY="%{A1:mpc $HOST_CMD play:}"
PAUSE="%{A1:mpc $HOST_CMD pause:}"
PREV="%{A2:mpc $HOST_CMD prev:}"
NEXT="%{A3:mpc $HOST_CMD next:}"

printTrack() {
    song=$(mpc $HOST_CMD --format "[%title%]" | head -n 1)
    artist=$(mpc $HOST_CMD --format "[%artist%]" | head -n 1)

    if [ ${#song} -ge 30 ] ; then
        song=${song:0:28}".."
    fi
    if [ ${#artist} -ge 20 ] ; then
        artist=${artist:0:18}".."
    fi

    status=$(mpc $HOST_CMD status 2>&1)
    case $status in
        *"[playing]"*)
            FULL="$PAUSE""$PREV""$NEXT""$STATUS_PLAYING ""$artist - $song""%{A}%{A}%{A}"
        ;;
        *"[paused]"*)
            FULL="$PLAY""$PREV""$NEXT""$STATUS_PAUSED ""$artist - $song""%{A}%{A}%{A}"
        ;;
        *"mpd error: Address family not supported by protocol"*)
	    FULL="$STATUS_ERROR Error connecting to $HOST"
	;;
        *)
            FULL="$STATUS_STOPPED ""Not playing"
        ;;
    esac

    printf "%s\n" "$FULL"
}

loop() {
    while true; do
        printTrack
        mpc $HOST_CMD idleloop | \
        while read -r _ ; do
            printTrack
        done
        sleep 5
    done
}

# do not block so we can receive signals
loop &
wait
